# This is the wrong model, assumes phase and task are nested within subject
m05b<-lmer(time~
# Fixed-effects
1+phase*task+ # adding in interaction
# Random-effects
(1|Subject)+(1|Subject/phase)+(1|Subject/task), data=DAT3, REML=FALSE)
summary(m05b)
summary(m05)
m06<-lmer(time~
# Fixed-effects
1+phase*task+PC1+PC2+ # adding in interaction
# Random-effects
(1|Subject)+(1|phase:Subject)+(1|task:Subject), data=DAT3, REML=FALSE)
summary(m05)
summary(m06)
m07<-lmer(time~
# Fixed-effects
1+phase*task*PC1+phase*task*PC2+ # adding in interaction
# Random-effects
(1|Subject)+(1|phase:Subject)+(1|task:Subject), data=DAT3, REML=FALSE)
summary(m07)
as.numeric(DAT3$phase)
DAT3$pre.c<-as.numeric(DAT3$phase)-1.5
as.numeric(DAT3$task)
head(DAT3$task)
head(DAT3)
DAT3$pre.c<-as.numeric(DAT3$phase)-1.5
DAT3$feed.c<-as.numeric(DAT3$phase)-1.5
head(DAT3)
# This is the right model, assumes that phase and task are crossed with subject
m05<-lmer(time~
# Fixed-effects
1+pre.c*feed.c+ # adding in interaction
# Random-effects
(1|Subject)+(1|phase:Subject)+(1|task:Subject), data=DAT3, REML=FALSE)
summary(m05)
DAT3$feed.c<-as.numeric(DAT3$task)-1.5
DAT3$pre.c<-as.numeric(DAT3$phase)-1.5
DAT3$feed.c<-as.numeric(DAT3$task)-1.5
head(DAT3)
# This is the right model, assumes that phase and task are crossed with subject
m05<-lmer(time~
# Fixed-effects
1+pre.c*feed.c+ # adding in interaction
# Random-effects
(1|Subject)+(1|phase:Subject)+(1|task:Subject), data=DAT3, REML=FALSE)
summary(m05)
# Adding in the Principal Components as Covariates
m06<-lmer(time~
# Fixed-effects
1+pre.c*feed.c+PC1+PC2+ # adding in interaction
# Random-effects
(1|Subject)+(1|phase:Subject)+(1|task:Subject), data=DAT3, REML=FALSE)
summary(m06)
# Interactions with Covariates
m07<-lmer(time~
# Fixed-effects
1+pre.c*feed.c*PC1+pre.c*feed.c*PC2+ # adding in interaction
# Random-effects
(1|Subject)+(1|phase:Subject)+(1|task:Subject), data=DAT3, REML=FALSE)
summary(m07)
# Visualizing the 2 x 2 Design
head(DAT3)
head(DAT_UNIQUE)
head(DAT2)
g1<-ggplot(DATA, aes(x = PC2, y = Improvement)) +
geom_point(aes(fill=as.factor(Subject)), pch=21, size=3, stroke=1.25, alpha=0.8) +
stat_smooth(aes(lty=Test), col = "black", method="lm", lwd=1.5, se=FALSE) +
facet_wrap(~Test)
g2<-g1+scale_x_continuous(name = "Principal Component 2") +
scale_y_continuous(name = "Improvement (Pre - Post; s)")
g3 <- g2 + theme_bw() +
theme(axis.text=element_text(size=16, colour="black"),
axis.title=element_text(size=16,face="bold"),
plot.title=element_text(size=16,face="bold", hjust = 0.5)) +
theme(strip.text.x = element_text(size = 16))+
theme(legend.position="none")
plot(g3)
## Opening packages ------------------------------------------------------------
library("ggplot2"); library("lme4"); library("car"); library("dplyr");
library("lmerTest"); library("influence.ME"); library("boot"); library("lmeresampler")
##----------------------- Data Cleaning and QA ---------------------------------
## Setting the Directory -------------------------------------------------------
# Make sure the data files from GitHub are saved locally and set the working
# directory to that location.
getwd()
setwd("C:/Users/u6015231/Documents/GitHub/PD_APAs")
list.files()
# Participant #15 was excluded based on influence statistics.
# To recreate the final analyses, import data_PETERSON_MASTER_no15
# To load the full dataset without exclusions, import data_PETERSON_MASTER_05012018.csv
DATA<-read.csv("./data_PETERSON_MASTER_no15.csv", header = TRUE, sep=",",
na.strings=c("NA","NaN"," ",""))
head(DATA)
DATA$subject<-factor(DATA$subject) # Make sure that SubID is treated as a factor
DATA$FOG.c<-(DATA$FOGstatus*2)-1 # FOGstatus was dummy coded, so I created a
# coded version of this variable.
# We can also create a categorical label for this variable to be used in graphs
DATA$group=factor(DATA$FOGstatus)
levels(DATA$group) <- list("PD+FOG"="1", "PD-FOG"="0")
summary(DATA$group)
## Removing Outlying APAs ------------------------------------------------------
# Note that these exclusions were based on the full dataset that included Participant 15.
summary(DATA$APA) # mean APA = 5.22
sd(DATA$APA, na.rm=TRUE) # SD APA = 8.36
# Greater than 2SD = 5.22+2*(8.36) = 21.94 ~ 22
# Therefore, we will cut off everything greater than 22
plot(density(DATA$APA, na.rm=TRUE)); abline(col="red", lwd=2, v=22)
DAT2<-subset(DATA, APA <= 22)
# This leaves 1293/1400 rows, but 55 of those were missing values,
# So really its 1293/1345,  really we've excluded ~4% of our data.
summary(DAT2$APA)
## Removing Outlying COP_pos ---------------------------------------------------
summary(DATA$COP_pos) # mean COP_pos = 3.12
sd(DATA$COP_pos, na.rm=TRUE) # SD APA = 12.60
# UL for COP_pos is thus Mean + 2SD = 3.12+2*(12.60) = 28.32
# LL for COP_pos is thus Mean - 2SD = 3.12-2*(12.60) = -22.08
# Therefore, we will cut off everything greater than 22
plot(density(DATA$COP_pos, na.rm=TRUE)); abline(col="red", lwd=2, v=c(-22,28))
DAT3<-subset(DAT2, COP_pos >= -22) # removes lower than LL
DAT3<-subset(DAT3, COP_pos <= 28) # removes greater than UL
# This leaves 1246/1400 rows, but 55 of those were missing values,
# So really its 1246/1345,  really we've excluded ~7% of our data.
summary(DAT3$COP_pos)
summary(DAT3$APA)
# Next we can break the data into forward and backward steps for analysis
FORWARD<-subset(DAT3, direction == "forward")
BACKWARD<-subset(DAT3, direction =="backward")
# Note that we have two different methods for identifying step number in the
# data.
summary(FORWARD$trial) # relative trial numbers for each step type (1-25)
summary(FORWARD$trial_num) # absolute trial numbers (1-50)
##  --------------------- Analysis of Foward Steps -----------------------------
## Plot Trial and APA for forward steps ----------------------------------------------
g1<-ggplot(FORWARD, aes(x = trial_num, y = APA)) +
geom_point(aes(fill=as.factor(subject)), pch=21, size=2, stroke=1.25) +
geom_line(aes(group=subject)) +
stat_smooth(aes(col=subject), method="lm", lwd=1.5, se=FALSE) +
facet_wrap(~FOGstatus)
g2<-g1+scale_x_continuous(name = "Trial Number") +
scale_y_continuous(name = "APA") + labs(title="Forward Steps")
g3 <- g2 + theme_bw() +
theme(axis.text=element_text(size=16, colour="black"),
axis.title=element_text(size=16,face="bold"),
plot.title=element_text(size=16,face="bold", hjust = 0.5)) +
theme(strip.text.x = element_text(size = 16))+
theme(legend.position="none")
plot(g3)
## Forward step models ------------------------------------------------------------------
#First, we will create a mean centered version of the APA variable
FORWARD$APA.c<-FORWARD$APA-mean(FORWARD$APA)
summary(FORWARD$APA)
FORWARD$subject<-factor(FORWARD$subject)
f03<-lmer(COMdisp~
# Fixed-effects
1+
trial_num+APA.c*FOG.c+
# Random-effects
(1+trial_num|subject), data=BACKWARD, REML=FALSE)
summary(f03)
## Forward step models ------------------------------------------------------------------
#First, we will create a mean centered version of the APA variable
FORWARD$APA.c<-FORWARD$APA-mean(FORWARD$APA)
summary(FORWARD$APA)
FORWARD$subject<-factor(FORWARD$subject)
# Model #3 Adding in the Interaction FOG.c
f03<-lmer(StepLength~
# Fixed-effects
1+
trial_num+APA.c*FOG.c+
# Random-effects
(1+trial_num|subject), data=FORWARD, REML=FALSE)
summary(f03)
# Model #3 Adding in the Interaction FOG.c
f03<-lmer(StepLength~
# Fixed-effects
1+
trial_num+APA.c*FOG.c+
# Random-effects
(1+trial_num|subject), data=FORWARD, REML=FALSE)
summary(f03)
## Bootstrap CIs for FORWARD STEP LENGTH ---------------------------------------
boot1 <- bootstrap(model = f03, fn = fixef, type = "case",
B = 500, resample = c(TRUE, FALSE))
boot.ci(boot1, index = 5, type="perc") #Set index to 1-5 for different effects
# 1= INT; 2 = trial_num; 3 = APA.c; 4 = FOG.c; 5 = APAxFOG Interaction
plot(boot1, index=1)
# Model #3 Adding in the Interaction FOG.c
f03<-lmer(ML_MOS~
# Fixed-effects
1+
trial_num+APA.c*FOG.c+
# Random-effects
(1+trial_num|subject), data=FORWARD, REML=FALSE)
summary(f03)
## Bootstrap CIs for FORWARD ML MOS --------------------------------------------
boot1 <- bootstrap(model = f03, fn = fixef, type = "case",
B = 1000, resample = c(TRUE, FALSE))
# specifies resamples at the subject level, but NOT the trial level.
# the resample argument goes from the HIGHEST level to the LOWEST level.
boot1
boot.ci(boot1, index = 5, type="perc") #Set index to 1-5 for different effects
# 1= INT; 2 = trial_num; 3 = APA.c; 4 = FOG.c; 5 = APAxFOG Interaction
plot(boot1, index=1)
## Bootstrap CIs for FORWARD ML MOS --------------------------------------------
boot1 <- bootstrap(model = f03, fn = fixef, type = "case",
B = 500, resample = c(TRUE, FALSE))
# 1= INT; 2 = trial_num; 3 = APA.c; 4 = FOG.c; 5 = APAxFOG Interaction
plot(boot1, index=5)
# specifies resamples at the subject level, but NOT the trial level.
# the resample argument goes from the HIGHEST level to the LOWEST level.
head(boot1)
# specifies resamples at the subject level, but NOT the trial level.
# the resample argument goes from the HIGHEST level to the LOWEST level.
boot1$t0
# Model #3 Adding in the Interaction FOG.c
f03<-lmer(AP_MOS~
# Fixed-effects
1+
trial_num+APA.c*FOG.c+
# Random-effects
(1+trial_num|subject), data=FORWARD, REML=FALSE)
summary(f03)
## Bootstrap CIs for FORWARD AP MOS --------------------------------------------
boot1 <- bootstrap(model = f03, fn = fixef, type = "case",
B = 500, resample = c(TRUE, FALSE))
# specifies resamples at the subject level, but NOT the trial level.
# the resample argument goes from the HIGHEST level to the LOWEST level.
boot1$t0
boot.ci(boot1, index = 5, type="perc") #Set index to 1-5 for different effects
# 1= INT; 2 = trial_num; 3 = APA.c; 4 = FOG.c; 5 = APAxFOG Interaction
plot(boot1, index=5)
## Bootstrap CIs for FORWARD AP MOS --------------------------------------------
boot1 <- bootstrap(model = f03, fn = fixef, type = "case",
B = 800, resample = c(TRUE, FALSE))
# specifies resamples at the subject level, but NOT the trial level.
# the resample argument goes from the HIGHEST level to the LOWEST level.
boot1$t0
boot.ci(boot1, index = 5, type="perc") #Set index to 1-5 for different effects
# 1= INT; 2 = trial_num; 3 = APA.c; 4 = FOG.c; 5 = APAxFOG Interaction
plot(boot1, index=5)
# specifies resamples at the subject level, but NOT the trial level.
# the resample argument goes from the HIGHEST level to the LOWEST level.
boot1$t1
# specifies resamples at the subject level, but NOT the trial level.
# the resample argument goes from the HIGHEST level to the LOWEST level.
boot1$t2
# specifies resamples at the subject level, but NOT the trial level.
# the resample argument goes from the HIGHEST level to the LOWEST level.
boot1$t0
print(boot.ci(boot1, index = 5, type="perc"),digits=6) #Set index to 1-5 for different effects
boot.ci(boot1, index = 5, type="perc", digits=6) #Set index to 1-5 for different effects
# Model #3 Adding in the Interaction FOG.c
f03<-lmer(stepWidth~
# Fixed-effects
1+
trial_num+APA.c*FOG.c+
# Random-effects
(1+trial_num|subject), data=FORWARD, REML=FALSE)
summary(f03)
## Bootstrap CIs for FORWARD AP MOS --------------------------------------------
boot1 <- bootstrap(model = f03, fn = fixef, type = "case",
B = 800, resample = c(TRUE, FALSE))
# specifies resamples at the subject level, but NOT the trial level.
# the resample argument goes from the HIGHEST level to the LOWEST level.
boot1$t0
# Model #3 Adding in the Interaction FOG.c
f03<-lmer(AP_COMatFO~
# Fixed-effects
1+
trial_num+APA.c*FOG.c+
# Random-effects
(1+trial_num|subject), data=FORWARD, REML=FALSE)
summary(f03)
## Bootstrap CIs for FORWARD AP MOS --------------------------------------------
boot1 <- bootstrap(model = f03, fn = fixef, type = "case",
B = 800, resample = c(TRUE, FALSE))
# specifies resamples at the subject level, but NOT the trial level.
# the resample argument goes from the HIGHEST level to the LOWEST level.
boot1$t0
boot.ci(boot1, index = 2, type="perc") #Set index to 1-5 for different effects
# 1= INT; 2 = trial_num; 3 = APA.c; 4 = FOG.c; 5 = APAxFOG Interaction
plot(boot1, index=2)
# specifies resamples at the subject level, but NOT the trial level.
# the resample argument goes from the HIGHEST level to the LOWEST level.
boot1$t0
boot.ci(boot1, index = 3, type="perc") #Set index to 1-5 for different effects
# Model #3 Adding in the Interaction FOG.c
f03<-lmer(StepLength~
# Fixed-effects
1+
trial_num+APA.c*FOG.c+
# Random-effects
(1+trial_num|subject), data=FORWARD, REML=FALSE)
summary(f03)
# Model #3 Adding in the Interaction FOG.c
f03<-lmer(Sla~
# Fixed-effects
1+
trial_num+APA.c*FOG.c+
# Random-effects
(1+trial_num|subject), data=FORWARD, REML=FALSE)
summary(f03)
# Model #3 Adding in the Interaction FOG.c
f03<-lmer(ML_MOS~
# Fixed-effects
1+
trial_num+APA.c*FOG.c+
# Random-effects
(1+trial_num|subject), data=FORWARD, REML=FALSE)
summary(f03)
## Bootstrap CIs for FORWARD ML MOS --------------------------------------------
boot1 <- bootstrap(model = f03, fn = fixef, type = "case",
B = 800, resample = c(TRUE, FALSE))
boot.ci(boot1, index = 5, type="perc") #Set index to 1-5 for different effects
boot.ci(boot1, index = 5, type="perc") #Set index to 1-5 for different effects
# 1= INT; 2 = trial_num; 3 = APA.c; 4 = FOG.c; 5 = APAxFOG Interaction
plot(boot1, index=5)
# specifies resamples at the subject level, but NOT the trial level.
# the resample argument goes from the HIGHEST level to the LOWEST level.
boot1$t0
# Model #3 Adding in the Interaction FOG.c
f03<-lmer(AP_MOS~
# Fixed-effects
1+
trial_num+APA.c*FOG.c+
# Random-effects
(1+trial_num|subject), data=FORWARD, REML=FALSE)
summary(f03)
# Model #3 Adding in the Interaction FOG.c
f03<-lmer(stepWidth~
# Fixed-effects
1+
trial_num+APA.c*FOG.c+
# Random-effects
(1+trial_num|subject), data=FORWARD, REML=FALSE)
summary(f03)
# Model #3 Adding in the Interaction FOG.c
f03<-lmer(stepWidth~
# Fixed-effects
1+
trial_num+APA.c*FOG.c+
# Random-effects
(1+trial_num|subject), data=FORWARD, REML=FALSE)
summary(f03)
## Bootstrap CIs for FORWARD AP MOS --------------------------------------------
boot1 <- bootstrap(model = f03, fn = fixef, type = "case",
B = 800, resample = c(TRUE, FALSE))
# Model #3 Adding in the Interaction FOG.c
f03<-lmer(AP_COMatFO~
# Fixed-effects
1+
trial_num+APA.c*FOG.c+
# Random-effects
(1+trial_num|subject), data=FORWARD, REML=FALSE)
summary(f03)
# Model #3 Adding in the Interaction FOG.c
f03<-lmer(ML_COMatFO~
# Fixed-effects
1+
trial_num+APA.c*FOG.c+
# Random-effects
(1+trial_num|subject), data=FORWARD, REML=FALSE)
summary(f03)
# Model #3 Adding in the Interaction FOG.c
f03<-lmer(AP_COMatFO~
# Fixed-effects
1+
trial_num+APA.c*FOG.c+
# Random-effects
(1+trial_num|subject), data=FORWARD, REML=FALSE)
summary(f03)
# Model #3 Adding in the Interaction FOG.c
f03<-lmer(ML_COMatFO~
# Fixed-effects
1+
trial_num+APA.c*FOG.c+
# Random-effects
(1+trial_num|subject), data=FORWARD, REML=FALSE)
summary(f03)
f03<-lmer(COMdisp~
# Fixed-effects
1+
trial_num+APA.c*FOG.c+
# Random-effects
(1+trial_num|subject), data=FORWARD, REML=FALSE)
summary(f03)
## Backward step models ------------------------------------------------------------------
#First, we will create a mean centered version of the APA variable
BACKWARD$APA.c<-BACKWARD$APA-mean(BACKWARD$APA)
summary(BACKWARD$APA)
BACKWARD$subject<-factor(BACKWARD$subject)
summary(BACKWARD$subject)
f03<-lmer(StepLength~
# Fixed-effects
1+
trial_num+APA.c*FOG.c+
# Random-effects
(1+trial_num|subject), data=BACKWARD, REML=FALSE)
summary(f03)
# Model #3 Adding in the Interaction FOG.c
f03<-lmer(Sla~
# Fixed-effects
1+
trial_num+APA.c*FOG.c+
# Random-effects
(1+trial_num|subject), data=BACKWARD, REML=FALSE)
summary(f03)
## Bootstrap CIs for FORWARD AP MOS --------------------------------------------
boot1 <- bootstrap(model = f03, fn = fixef, type = "case",
B = 500, resample = c(TRUE, FALSE))
boot.ci(boot1, index = 5, type="perc") #Set index to 1-5 for different effects
boot.ci(boot1, index = 1, type="perc") #Set index to 1-5 for different effects
## Bootstrap CIs for FORWARD AP MOS --------------------------------------------
boot1 <- bootstrap(model = f03, fn = fixef, type = "case",
B = 800, resample = c(TRUE, FALSE))
boot.ci(boot1, index = 1, type="perc") #Set index to 1-5 for different effects
boot.ci(boot1, index = 2, type="perc") #Set index to 1-5 for different effects
boot.ci(boot1, index = 3, type="perc") #Set index to 1-5 for different effects
boot.ci(boot1, index = 4, type="perc") #Set index to 1-5 for different effects
boot.ci(boot1, index = 5, type="perc") #Set index to 1-5 for different effects
# Model #3 Adding in the Interaction FOG.c
f03<-lmer(ML_MOS~
# Fixed-effects
1+
trial_num+APA.c*FOG.c+
# Random-effects
(1+trial_num|subject), data=BACKWARD, REML=FALSE)
summary(f03)
# Model #3 Adding in the Interaction FOG.c
f03<-lmer(AP_MOS~
# Fixed-effects
1+
trial_num+APA.c*FOG.c+
# Random-effects
(1+trial_num|subject), data=BACKWARD, REML=FALSE)
summary(f03)
## Bootstrap CIs for FORWARD AP MOS --------------------------------------------
boot1 <- bootstrap(model = f03, fn = fixef, type = "case",
B = 800, resample = c(TRUE, FALSE))
boot.ci(boot1, index = 1, type="perc") #Set index to 1-5 for different effects
boot.ci(boot1, index = 2, type="perc") #Set index to 1-5 for different effects
boot.ci(boot1, index = 3, type="perc") #Set index to 1-5 for different effects
boot.ci(boot1, index = 4, type="perc") #Set index to 1-5 for different effects
boot.ci(boot1, index = 5, type="perc") #Set index to 1-5 for different effects
# Model #3 Adding in the Interaction FOG.c
f03<-lmer(AP_MOS~
# Fixed-effects
1+
trial_num+APA.c*FOG.c+
# Random-effects
(1+trial_num|subject), data=BACKWARD, REML=FALSE)
summary(f03)
f03<-lmer(stepWidth~
# Fixed-effects
1+
trial_num+APA.c*FOG.c+
# Random-effects
(1+trial_num|subject), data=BACKWARD, REML=FALSE)
summary(f03)
# Model #3 Adding in the Interaction FOG.c
f03<-lmer(AP_COMatFO~
# Fixed-effects
1+
trial_num+APA.c*FOG.c+
# Random-effects
(1+trial_num|subject), data=BACKWARD, REML=FALSE)
summary(f03)
# Model #3 Adding in the Interaction FOG.c
f03<-lmer(ML_COMatFO~
# Fixed-effects
1+
trial_num+APA.c*FOG.c+
# Random-effects
(1+trial_num|subject), data=BACKWARD, REML=FALSE)
summary(f03)
## Bootstrap CIs for FORWARD AP MOS --------------------------------------------
boot1 <- bootstrap(model = f03, fn = fixef, type = "case",
B = 800, resample = c(TRUE, FALSE))
boot.ci(boot1, index = 1, type="perc") #Set index to 1-5 for different effects
boot.ci(boot1, index = 2, type="perc") #Set index to 1-5 for different effects
# 1= INT; 2 = trial_num; 3 = APA.c; 4 = FOG.c; 5 = APAxFOG Interaction
plot(boot1, index=2)
boot.ci(boot1, index = 3, type="perc") #Set index to 1-5 for different effects
# 1= INT; 2 = trial_num; 3 = APA.c; 4 = FOG.c; 5 = APAxFOG Interaction
plot(boot1, index=3)
# specifies resamples at the subject level, but NOT the trial level.
# the resample argument goes from the HIGHEST level to the LOWEST level.
boot1$t0
boot.ci(boot1, index = 4, type="perc") #Set index to 1-5 for different effects
boot.ci(boot1, index = 5, type="perc") #Set index to 1-5 for different effects
# 1= INT; 2 = trial_num; 3 = APA.c; 4 = FOG.c; 5 = APAxFOG Interaction
plot(boot1, index=5)
f03<-lmer(COMdisp~
# Fixed-effects
1+
trial_num+APA.c*FOG.c+
# Random-effects
(1+trial_num|subject), data=BACKWARD, REML=FALSE)
summary(f03)
## Bootstrap CIs for FORWARD AP MOS --------------------------------------------
boot1 <- bootstrap(model = f03, fn = fixef, type = "case",
B = 800, resample = c(TRUE, FALSE))
boot.ci(boot1, index = 1, type="perc") #Set index to 1-5 for different effects
summary(f03)
boot.ci(boot1, index = 1, type="perc") #Set index to 1-5 for different effects
boot.ci(boot1, index = 2, type="perc") #Set index to 1-5 for different effects
boot.ci(boot1, index = 5, type="perc") #Set index to 1-5 for different effects
boot.ci(boot1, index = 4, type="perc") #Set index to 1-5 for different effects
boot.ci(boot1, index = 3, type="perc") #Set index to 1-5 for different effects
boot.ci(boot1, index = 2, type="perc") #Set index to 1-5 for different effects
boot.ci(boot1, index = 1, type="perc") #Set index to 1-5 for different effects
